{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041e\u0442\u0447\u0435\u0442\u044b \u043a \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c","title":"\u041e\u0442\u0447\u0435\u0442\u044b \u043a \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c"},{"location":"#_1","text":"","title":"\u041e\u0442\u0447\u0435\u0442\u044b \u043a \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c"},{"location":"lab1/task1/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 import socket socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) socket.bind(('localhost', 44444)) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u0430 \u0438 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043a \u0445\u043e\u0441\u0442\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 while True: data, address = socket.recvfrom(128) # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 data = data.decode() print(f'Message from {address[0]}:{address[1]}: {data}') # \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f if data == 'Hello, server': socket.sendto('Hello, client'.encode(), address) elif data == 'exit': break else: socket.sendto('No understanding'.encode(), address) socket.close() \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 import socket server_address = ('localhost', 44444) # \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) #\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u0430 while True: msg = input() # \u0447\u0442\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 socket.sendto(msg.encode(), server_address) # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 if msg == 'exit': break else: # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 data, address = socket.recvfrom(128) data = data.decode() print(data) socket.close() \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"lab1/task1/#1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"lab1/task1/#_1","text":"import socket socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) socket.bind(('localhost', 44444)) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u0430 \u0438 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u043a \u0445\u043e\u0441\u0442\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 while True: data, address = socket.recvfrom(128) # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 data = data.decode() print(f'Message from {address[0]}:{address[1]}: {data}') # \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f if data == 'Hello, server': socket.sendto('Hello, client'.encode(), address) elif data == 'exit': break else: socket.sendto('No understanding'.encode(), address) socket.close()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430"},{"location":"lab1/task1/#_2","text":"import socket server_address = ('localhost', 44444) # \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) #\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u0430 while True: msg = input() # \u0447\u0442\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 socket.sendto(msg.encode(), server_address) # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 if msg == 'exit': break else: # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 data, address = socket.recvfrom(128) data = data.decode() print(data) socket.close()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430"},{"location":"lab1/task1/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task2/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f), \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 import socket import math # \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u043b\u043e\u0433 \u0444\u0430\u0439\u043b def get_message(): data = connection.recv(128).decode() log_file.write(f'Message from {address[0]}:{address[1]}: {data}\\n') return data # \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f def send_message(msg): connection.send(msg.encode()) log_file.write(f'Message to {address[0]}:{address[1]}: {msg}\\n') # \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f def find_roots(coefficients): a, b, c = map(float, coefficients.split()) discriminant = b * b - 4 * a * c if discriminant < 0: return 'This equation has no real roots' x1 = (b * (-1) + math.sqrt(discriminant)) / (2 * a) x2 = (b * (-1) - math.sqrt(discriminant)) / (2 * a) if x1 == x2: return f'This equation has one root: {x1}' else: return f'Roots of this equation are: {x1} and {x2}' log_file = open(\"server3.log\", \"w\") socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.bind(('localhost', 55555)) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u0441\u043e\u043a\u0435\u0442\u0430 socket.listen(1) connection, address = socket.accept() #\u043f\u0440\u0438\u043d\u044f\u0442\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 send_message('Please type \\'Find equation roots\\' to find roots of your quadratic equation' '\\nType \\'exit\\' to terminate connection') while True: # \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c message = get_message() if message == 'Find equation roots': send_message('Enter equation coefficients\\nExample: 1 4 3') coefficients = get_message() answer = find_roots(coefficients) send_message(answer) elif message == 'exit': break else: send_message('No understanding') socket.close() \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 import socket # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 def receive_message(): message = socket.recv(128).decode() print(message) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u0430 \u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c server_address = ('localhost', 55555) socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.connect(server_address) receive_message() while True: # \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c msg = input() socket.send(msg.encode()) if msg == 'exit': break elif msg == 'Find equation roots': receive_message() coefficients = input() socket.send(coefficients.encode()) receive_message() else: receive_message() socket.close() \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b Log \u0444\u0430\u0439\u043b Message to 127.0.0.1:51621: Please type 'Find equation roots' to find roots of your quadratic equation Type 'exit' to terminate connection Message from 127.0.0.1:51621: Find equation roots Message to 127.0.0.1:51621: Enter equation coefficients Example: 1 4 3 Message from 127.0.0.1:51621: 1 4 3 Message to 127.0.0.1:51621: Roots of this equation are: -1.0 and -3.0 Message from 127.0.0.1:51621: Find equation roots Message to 127.0.0.1:51621: Enter equation coefficients Example: 1 4 3 Message from 127.0.0.1:51621: 1 4 4 Message to 127.0.0.1:51621: This equation has one root: -2.0 Message from 127.0.0.1:51621: exit","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab1/task2/#2","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f), \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab1/task2/#_1","text":"import socket import math # \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 \u043b\u043e\u0433 \u0444\u0430\u0439\u043b def get_message(): data = connection.recv(128).decode() log_file.write(f'Message from {address[0]}:{address[1]}: {data}\\n') return data # \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f def send_message(msg): connection.send(msg.encode()) log_file.write(f'Message to {address[0]}:{address[1]}: {msg}\\n') # \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f def find_roots(coefficients): a, b, c = map(float, coefficients.split()) discriminant = b * b - 4 * a * c if discriminant < 0: return 'This equation has no real roots' x1 = (b * (-1) + math.sqrt(discriminant)) / (2 * a) x2 = (b * (-1) - math.sqrt(discriminant)) / (2 * a) if x1 == x2: return f'This equation has one root: {x1}' else: return f'Roots of this equation are: {x1} and {x2}' log_file = open(\"server3.log\", \"w\") socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.bind(('localhost', 55555)) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430 \u0441\u043e\u043a\u0435\u0442\u0430 socket.listen(1) connection, address = socket.accept() #\u043f\u0440\u0438\u043d\u044f\u0442\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 send_message('Please type \\'Find equation roots\\' to find roots of your quadratic equation' '\\nType \\'exit\\' to terminate connection') while True: # \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c message = get_message() if message == 'Find equation roots': send_message('Enter equation coefficients\\nExample: 1 4 3') coefficients = get_message() answer = find_roots(coefficients) send_message(answer) elif message == 'exit': break else: send_message('No understanding') socket.close()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430"},{"location":"lab1/task2/#_2","text":"import socket # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 def receive_message(): message = socket.recv(128).decode() print(message) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u0430 \u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c server_address = ('localhost', 55555) socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.connect(server_address) receive_message() while True: # \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c msg = input() socket.send(msg.encode()) if msg == 'exit': break elif msg == 'Find equation roots': receive_message() coefficients = input() socket.send(coefficients.encode()) receive_message() else: receive_message() socket.close()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430"},{"location":"lab1/task2/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task2/#log","text":"Message to 127.0.0.1:51621: Please type 'Find equation roots' to find roots of your quadratic equation Type 'exit' to terminate connection Message from 127.0.0.1:51621: Find equation roots Message to 127.0.0.1:51621: Enter equation coefficients Example: 1 4 3 Message from 127.0.0.1:51621: 1 4 3 Message to 127.0.0.1:51621: Roots of this equation are: -1.0 and -3.0 Message from 127.0.0.1:51621: Find equation roots Message to 127.0.0.1:51621: Enter equation coefficients Example: 1 4 3 Message from 127.0.0.1:51621: 1 4 4 Message to 127.0.0.1:51621: This equation has one root: -2.0 Message from 127.0.0.1:51621: exit","title":"Log \u0444\u0430\u0439\u043b"},{"location":"lab1/task3/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 import socket # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 def get_message(): data = connection.recv(128).decode() log_file.write(f'Message from {address[0]}:{address[1]}: {data}\\n') return data # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0443 def send_message(msg): connection.send(msg.encode()) log_file.write(f'Message to {address[0]}:{address[1]}: {msg}\\n') log_file = open(\"server4.log\", \"w\") socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.bind(('localhost', 55555)) socket.listen(1) connection, address = socket.accept() html_file = open('index.html', 'rb') # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 http \u043e\u0442\u0432\u0435\u0442\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e html \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 connection.sendall(b\"HTTP/1.1 200 OK\\r\\n\\r\\n\" + html_file.read()) socket.close() \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 import socket # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 def receive_message(): message = socket.recv(1024).decode() print(message) server_address = ('localhost', 55555) socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.connect(server_address) receive_message() socket.close() HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>HI</title> </head> <body> <h1>you are connected</h1> </body> </html> \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"lab1/task3/#3","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"lab1/task3/#_1","text":"import socket # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 def get_message(): data = connection.recv(128).decode() log_file.write(f'Message from {address[0]}:{address[1]}: {data}\\n') return data # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0443 def send_message(msg): connection.send(msg.encode()) log_file.write(f'Message to {address[0]}:{address[1]}: {msg}\\n') log_file = open(\"server4.log\", \"w\") socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.bind(('localhost', 55555)) socket.listen(1) connection, address = socket.accept() html_file = open('index.html', 'rb') # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 http \u043e\u0442\u0432\u0435\u0442\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e html \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 connection.sendall(b\"HTTP/1.1 200 OK\\r\\n\\r\\n\" + html_file.read()) socket.close()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430"},{"location":"lab1/task3/#_2","text":"import socket # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 def receive_message(): message = socket.recv(1024).decode() print(message) server_address = ('localhost', 55555) socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.connect(server_address) receive_message() socket.close()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430"},{"location":"lab1/task3/#html-","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>HI</title> </head> <body> <h1>you are connected</h1> </body> </html>","title":"HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430"},{"location":"lab1/task3/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task4/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441 TCP \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0418 \u043f\u0440\u0438\u0435\u043c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u044e\u0437\u0435\u0440\u0430\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 import socket import threading # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c def send_message(msg, client_address): msg = f\"{client_address}: \" + msg for client in clients: if client == client_address: continue client.send(msg.encode()) # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 def client_work(connection, address): while True: msg = connection.recv(128).decode() if (msg is None) or (msg == 'exit'): break send_message(msg, address) connection.close() socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.bind(('localhost', 55555)) socket.listen() clients = list() while True: # \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f connection, address = socket.accept() send_message('New user', connection) clients.append(connection) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f client_thread = threading.Thread(target=client_work, args=(connection, address)) client_thread.start() \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 import socket import threading #\u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f def send_message(): while True: msg = input() socket.send(msg.encode()) # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f def receive_message(): while True: msg = socket.recv(128).decode() if not msg: break print(msg) socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.connect(('localhost', 55555)) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0432\u0443\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432: \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 send_thread = threading.Thread(target=send_message) send_thread.start() recv_thread = threading.Thread(target=receive_message) recv_thread.start() \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"lab1/task4/#4","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441 TCP \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0418 \u043f\u0440\u0438\u0435\u043c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u044e\u0437\u0435\u0440\u0430\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"lab1/task4/#_1","text":"import socket import threading # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c def send_message(msg, client_address): msg = f\"{client_address}: \" + msg for client in clients: if client == client_address: continue client.send(msg.encode()) # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 def client_work(connection, address): while True: msg = connection.recv(128).decode() if (msg is None) or (msg == 'exit'): break send_message(msg, address) connection.close() socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.bind(('localhost', 55555)) socket.listen() clients = list() while True: # \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f connection, address = socket.accept() send_message('New user', connection) clients.append(connection) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f client_thread = threading.Thread(target=client_work, args=(connection, address)) client_thread.start()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430"},{"location":"lab1/task4/#_2","text":"import socket import threading #\u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f def send_message(): while True: msg = input() socket.send(msg.encode()) # \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f def receive_message(): while True: msg = socket.recv(128).decode() if not msg: break print(msg) socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) socket.connect(('localhost', 55555)) # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0432\u0443\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432: \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 send_thread = threading.Thread(target=send_message) send_thread.start() recv_thread = threading.Thread(target=receive_message) recv_thread.start()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430"},{"location":"lab1/task4/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task5/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 import re import socket register = dict() # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 http \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 def handle_error(): response = \"HTTP/1.1 405 Method not Allowed\\r\\n\\r\\nMethod not supported\" return response.encode() # \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 get \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c def handle_get_request(): body = '<html><body>' # \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0436\u0443\u0440\u043d\u0430\u043b\u0430 for key, value in register.items(): grades = ' '.join(map(str, value)) body += f\"<p>{key}: {grades}</p>\" # \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u043e\u0446\u0435\u043d\u043e\u043a \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 body += \"\"\" <h1>Register</h1> <form method=\"POST\" action=\"/\"> <label for=\"subject\">Subject</label> <input type=\"text\" id=\"subject\" name=\"subject\"><br> <label for=\"grade\">Grade</label> <input type=\"number\" id=\"grade\" name=\"grade\"><br> <input type=\"submit\" value=\"Submit\"> </form> </body></html> \"\"\" # \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 http \u043e\u0442\u0432\u0435\u0442\u0430 length = len(body) response = f\"HTTP/1.1 200 OK\\r\\nContent-Length: {length}\\r\\n\\r\\n{body}\" return response.encode() # \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 post \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c def handle_post_request(request_line): # \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 valid_request = re.search(r'subject=(\\w+)&grade=(\\d+)', request_line) if valid_request: # \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0432 \u0436\u0443\u0440\u043d\u0430\u043b subject = valid_request.group(1) grade = valid_request.group(2) if subject not in register: register[subject] = [] register[subject].append(grade) # \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 http \u043e\u0442\u0432\u0435\u0442\u0430 response = \"HTTP/1.1 302 Found\\r\\nLocation: /\\r\\n\\r\\n\" return response.encode() # \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c def handle_client(connection): data = client_connection.recv(1024).decode() if data: # \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 request_lines = data.split('\\r\\n') request_line = request_lines[0] method = request_line.split()[0] body = request_lines[-1] if method == 'GET': response = handle_get_request() elif method == 'POST': response = handle_post_request(body) else: response = handle_error() # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 http \u043e\u0442\u0432\u0435\u0442\u0430 connection.sendall(response) connection.close() server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(('localhost', 55555)) server_socket.listen() while True: client_connection, client_address = server_socket.accept() handle_client(client_connection) server_socket.close() \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"lab1/task5/#5","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"lab1/task5/#_1","text":"import re import socket register = dict() # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 http \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 def handle_error(): response = \"HTTP/1.1 405 Method not Allowed\\r\\n\\r\\nMethod not supported\" return response.encode() # \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 get \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c def handle_get_request(): body = '<html><body>' # \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0436\u0443\u0440\u043d\u0430\u043b\u0430 for key, value in register.items(): grades = ' '.join(map(str, value)) body += f\"<p>{key}: {grades}</p>\" # \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u043e\u0446\u0435\u043d\u043e\u043a \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 body += \"\"\" <h1>Register</h1> <form method=\"POST\" action=\"/\"> <label for=\"subject\">Subject</label> <input type=\"text\" id=\"subject\" name=\"subject\"><br> <label for=\"grade\">Grade</label> <input type=\"number\" id=\"grade\" name=\"grade\"><br> <input type=\"submit\" value=\"Submit\"> </form> </body></html> \"\"\" # \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 http \u043e\u0442\u0432\u0435\u0442\u0430 length = len(body) response = f\"HTTP/1.1 200 OK\\r\\nContent-Length: {length}\\r\\n\\r\\n{body}\" return response.encode() # \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 post \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c def handle_post_request(request_line): # \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 valid_request = re.search(r'subject=(\\w+)&grade=(\\d+)', request_line) if valid_request: # \u0437\u0430\u043f\u0438\u0441\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0432 \u0436\u0443\u0440\u043d\u0430\u043b subject = valid_request.group(1) grade = valid_request.group(2) if subject not in register: register[subject] = [] register[subject].append(grade) # \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 http \u043e\u0442\u0432\u0435\u0442\u0430 response = \"HTTP/1.1 302 Found\\r\\nLocation: /\\r\\n\\r\\n\" return response.encode() # \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c def handle_client(connection): data = client_connection.recv(1024).decode() if data: # \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 request_lines = data.split('\\r\\n') request_line = request_lines[0] method = request_line.split()[0] body = request_lines[-1] if method == 'GET': response = handle_get_request() elif method == 'POST': response = handle_post_request(body) else: response = handle_error() # \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 http \u043e\u0442\u0432\u0435\u0442\u0430 connection.sendall(response) connection.close() server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind(('localhost', 55555)) server_socket.listen() while True: client_connection, client_address = server_socket.accept() handle_client(client_connection) server_socket.close()","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430"},{"location":"lab1/task5/#_2","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/task/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0412\u0430\u0440\u0438\u0430\u043d\u0442 2: \u0414\u043e\u0441\u043a\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439. \u041e \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c, \u0434\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438, \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u0442\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0448\u0442\u0440\u0430\u0444\u0430\u0445. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c (\u0441\u0440\u043e\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f). \u0421\u0434\u0430\u0447\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0432\u0438\u0434\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 (\u0443\u0447\u0438\u0442\u0435\u043b\u044c) \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u0437\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0432\u0441\u0435\u0445 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430. \u0411\u044b\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438: # \u0445\u0440\u0430\u043d\u0438\u0442 \u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439 \u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0430\u043c, \u0443 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439 \u0435\u0441\u0442\u044c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0430 class Teacher(AbstractUser): first_name = models.CharField(max_length=30) second_name = models.CharField(max_length=30) last_name = models.CharField(max_length=30) class Subject(models.Model): #\u043f\u0440\u0435\u0434\u043c\u0435\u0442\u044b name = models.CharField(max_length=100) class Homework(models.Model): teacher = models.ForeignKey(User, limit_choices_to={'groups__name': \"Teachers\"}, on_delete=models.CASCADE) subject = models.ForeignKey(Subject, on_delete=models.CASCADE) release_date = models.DateTimeField(default=datetime.datetime.now()) deadline = models.DateTimeField() description = models.CharField(max_length=1000) penalty = models.CharField(max_length=1000, default=None, blank=True, null=True) class Solution(models.Model): student = models.ForeignKey(User, limit_choices_to={'groups__name': \"Students\"}, on_delete=models.CASCADE) homework = models.ForeignKey(Homework, on_delete=models.CASCADE) solution_text = models.CharField(max_length=1000) status = [ ('CHECK', 'Checked'), ('WAIT', 'Waiting to be checked') ] mark = models.IntegerField(default=None, blank=True, null=True) \u0410\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u044f: from django.urls import path from . import views urlpatterns = [ path('teacher/new', views.teacher_form_view), path('teacher/success', views.teacher_add_success_view), path('student/new', views.student_form_view), path('student/success', views.student_add_success_view), path('homeworks', views.homeworks_view), path('homeworks/new/<hw_id>', views.solution_form_view), path('solution/success', views.solution_add_success_view), path('register', views.register_view), ] \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439: class TeacherForm(forms.ModelForm): class Meta: model = Teacher fields = [ \"username\", \"password\", \"last_name\", \"first_name\", \"second_name\", ] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439: def teacher_form_view(request): context = {} form = TeacherForm(request.POST or None) if form.is_valid(): user = form.save() group = Group.objects.get(name='Teachers') user.groups.add(group) #\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0433\u0440\u0443\u043f\u043f\u044b user.is_staff = True #\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0430\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u044c\u044e user.set_password(form.cleaned_data[\"password\"]) #\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f user.save() return HttpResponseRedirect('../teacher/success') context['form'] = form return render(request, \"new_user.html\", context) def teacher_add_success_view(request): return render(request, \"success_page.html\") \u0428\u0430\u0431\u043b\u043e\u043d\u044b \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>New Teacher</title> </head> <body> <form method=\"POST\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <input type=\"submit\" value=\"Submit\"> </form> </body> </html> <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Success</title> </head> <body> <h3>New teacher has been added successfully</h3> </body> </html> \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432: class StudentForm(forms.ModelForm): class Meta: model = Teacher fields = [ \"username\", \"password\", \"last_name\", \"first_name\", \"second_name\", ] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432: def student_form_view(request): context = {} form = StudentForm(request.POST or None) if form.is_valid(): user = form.save() group = Group.objects.get(name='Students') user.groups.add(group) #\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0433\u0440\u0443\u043f\u043f\u044b user.set_password(form.cleaned_data[\"password\"]) #\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f user.save() return HttpResponseRedirect('../student/success') context['form'] = form return render(request, \"new_student.html\", context) def student_add_success_view(request): return render(request, \"student_success_page.html\") \u0428\u0430\u0431\u043b\u043e\u043d\u044b \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>New Student</title> </head> <body> <form method=\"POST\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <input type=\"submit\" value=\"Submit\"> </form> </body> </html> <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Success</title> </head> <body> <h3>New student has been added successfully</h3> </body> </html> \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439: def homeworks_view(request): hws = dict() hws[\"dataset\"] = Homework.objects.all() return render(request, \"show_all_hws.html\", hws) \u0428\u0430\u0431\u043b\u043e\u043d \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Homeworks</title> </head> <body> <ul> {% for object in dataset %} <h3>{{object.subject.name}}</h3> \u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438: {{object.release_date|date:'d M Y'}} <br><br> \u0414\u0435\u0434\u043b\u0430\u0439\u043d: {{object.deadline|date:'d M Y'}} <br><br> <strong>\u0417\u0430\u0434\u0430\u043d\u0438\u0435:</strong> <br> {{object.description}} <br><br> <strong>\u0428\u0442\u0440\u0430\u0444:</strong> {{object.penalty}} <br><br> <a href=\"homeworks/new/{{object.id}}\"><button>\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0441\u0434\u0430\u0447\u0435</button></a> <hr/> {% endfor %} </ul> </body> </html> \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: \u0421\u0434\u0430\u0447\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0441\u0434\u0430\u0447\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439: class SolutionForm(forms.ModelForm): class Meta: model = Solution fields = [ \"student\", \"solution_text\", ] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0441\u0434\u0430\u0447\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439: def solution_form_view(request, hw_id): context = {} form = SolutionForm(request.POST or None) homework = Homework.objects.get(pk=hw_id) if form.is_valid(): solution = form.save(commit=False) #\u043d\u0435 \u043a\u043e\u043c\u043c\u0438\u0442, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e fk homework \u0435\u0449\u0435 \u043d\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d solution.homework = homework solution.save() return HttpResponseRedirect('../../solution/success') context['form'] = form context['homework'] = homework return render(request, \"new_solution.html\", context) def solution_add_success_view(request): return render(request, \"solution_success_page.html\") \u0428\u0430\u0431\u043b\u043e\u043d\u044b \u0434\u043b\u044f \u0441\u0434\u0430\u0447\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>New Solution</title> </head> <body> <h3>{{ homework.subject.name }}</h3> <p><strong>\u0417\u0430\u0434\u0430\u043d\u0438\u0435:</strong> {{homework.description}}</p> <form method=\"POST\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <input type=\"submit\" value=\"Submit\"> </form> </body> </html> <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Success</title> </head> <body> <h3>Your solution has been added successfully</h3> </body> </html> \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: \u0412\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0423\u0447\u0438\u0442\u0435\u043b\u044f \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0430\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u044c\u044e Django \u0438 \u0438\u043c\u0435\u044e\u0442 \u0442\u0430\u043c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0430. \u041e\u043d\u0438 \u043c\u043e\u0433\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c, \u043c\u0435\u043d\u044f\u0442\u044c, \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0438 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0438 \u043c\u0435\u043d\u044f\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u044f (\u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438). \u0412\u044b\u0432\u043e\u0434 \u043e\u0446\u0435\u043d\u043e\u043a \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043e\u0446\u0435\u043d\u043e\u043a: def register_view(request): subjects = Subject.objects.all() register = [] students = User.objects.filter(groups__name='Students') for student in students: student_marks = [] for subject in subjects: solutions = Solution.objects.filter(student=student, homework__subject=subject) subj_marks = [] for solution in solutions: if solution.mark is not None: subj_marks.append(solution.mark) student_marks.append((subject, subj_marks)) register.append((student, student_marks)) context = { 'student_data': register, } return render(request, 'show_marks.html', context) \u0428\u0430\u0431\u043b\u043e\u043d \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043e\u043a: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Student</title> </head> <body> <h1>Register</h1> {% for student, student_marks in student_data %} <h2>{{ student.first_name }}</h2> <ul> {% for subject, marks in student_marks %} <li> {{ subject.name }}: {% if marks %} {% for mark in marks %} {{ mark }} {% endfor %} {% else %} No marks available {% endif %} </li> {% endfor %} </ul> {% endfor %} </body> </html>","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab2/task/#_1","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab2/task/#2","text":"","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 2:"},{"location":"lab2/task/#_2","text":"\u041e \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c, \u0434\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438, \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u0442\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0448\u0442\u0440\u0430\u0444\u0430\u0445. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c (\u0441\u0440\u043e\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f). \u0421\u0434\u0430\u0447\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0432\u0438\u0434\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 (\u0443\u0447\u0438\u0442\u0435\u043b\u044c) \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u0437\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0432\u0441\u0435\u0445 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430. \u0411\u044b\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438: # \u0445\u0440\u0430\u043d\u0438\u0442 \u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439 \u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0430\u043c, \u0443 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439 \u0435\u0441\u0442\u044c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0430 class Teacher(AbstractUser): first_name = models.CharField(max_length=30) second_name = models.CharField(max_length=30) last_name = models.CharField(max_length=30) class Subject(models.Model): #\u043f\u0440\u0435\u0434\u043c\u0435\u0442\u044b name = models.CharField(max_length=100) class Homework(models.Model): teacher = models.ForeignKey(User, limit_choices_to={'groups__name': \"Teachers\"}, on_delete=models.CASCADE) subject = models.ForeignKey(Subject, on_delete=models.CASCADE) release_date = models.DateTimeField(default=datetime.datetime.now()) deadline = models.DateTimeField() description = models.CharField(max_length=1000) penalty = models.CharField(max_length=1000, default=None, blank=True, null=True) class Solution(models.Model): student = models.ForeignKey(User, limit_choices_to={'groups__name': \"Students\"}, on_delete=models.CASCADE) homework = models.ForeignKey(Homework, on_delete=models.CASCADE) solution_text = models.CharField(max_length=1000) status = [ ('CHECK', 'Checked'), ('WAIT', 'Waiting to be checked') ] mark = models.IntegerField(default=None, blank=True, null=True) \u0410\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u044f: from django.urls import path from . import views urlpatterns = [ path('teacher/new', views.teacher_form_view), path('teacher/success', views.teacher_add_success_view), path('student/new', views.student_form_view), path('student/success', views.student_add_success_view), path('homeworks', views.homeworks_view), path('homeworks/new/<hw_id>', views.solution_form_view), path('solution/success', views.solution_add_success_view), path('register', views.register_view), ]","title":"\u0414\u043e\u0441\u043a\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439."},{"location":"lab2/task/#_3","text":"","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f"},{"location":"lab2/task/#_4","text":"class TeacherForm(forms.ModelForm): class Meta: model = Teacher fields = [ \"username\", \"password\", \"last_name\", \"first_name\", \"second_name\", ]","title":"\u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439:"},{"location":"lab2/task/#_5","text":"def teacher_form_view(request): context = {} form = TeacherForm(request.POST or None) if form.is_valid(): user = form.save() group = Group.objects.get(name='Teachers') user.groups.add(group) #\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0433\u0440\u0443\u043f\u043f\u044b user.is_staff = True #\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0430\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u044c\u044e user.set_password(form.cleaned_data[\"password\"]) #\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f user.save() return HttpResponseRedirect('../teacher/success') context['form'] = form return render(request, \"new_user.html\", context) def teacher_add_success_view(request): return render(request, \"success_page.html\")","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439:"},{"location":"lab2/task/#_6","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>New Teacher</title> </head> <body> <form method=\"POST\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <input type=\"submit\" value=\"Submit\"> </form> </body> </html> <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Success</title> </head> <body> <h3>New teacher has been added successfully</h3> </body> </html>","title":"\u0428\u0430\u0431\u043b\u043e\u043d\u044b \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u0439:"},{"location":"lab2/task/#_7","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:"},{"location":"lab2/task/#_8","text":"class StudentForm(forms.ModelForm): class Meta: model = Teacher fields = [ \"username\", \"password\", \"last_name\", \"first_name\", \"second_name\", ]","title":"\u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432:"},{"location":"lab2/task/#_9","text":"def student_form_view(request): context = {} form = StudentForm(request.POST or None) if form.is_valid(): user = form.save() group = Group.objects.get(name='Students') user.groups.add(group) #\u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0433\u0440\u0443\u043f\u043f\u044b user.set_password(form.cleaned_data[\"password\"]) #\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f user.save() return HttpResponseRedirect('../student/success') context['form'] = form return render(request, \"new_student.html\", context) def student_add_success_view(request): return render(request, \"student_success_page.html\")","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432:"},{"location":"lab2/task/#_10","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>New Student</title> </head> <body> <form method=\"POST\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <input type=\"submit\" value=\"Submit\"> </form> </body> </html> <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Success</title> </head> <body> <h3>New student has been added successfully</h3> </body> </html>","title":"\u0428\u0430\u0431\u043b\u043e\u043d\u044b \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432:"},{"location":"lab2/task/#_11","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:"},{"location":"lab2/task/#_12","text":"","title":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439"},{"location":"lab2/task/#_13","text":"def homeworks_view(request): hws = dict() hws[\"dataset\"] = Homework.objects.all() return render(request, \"show_all_hws.html\", hws)","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439:"},{"location":"lab2/task/#_14","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Homeworks</title> </head> <body> <ul> {% for object in dataset %} <h3>{{object.subject.name}}</h3> \u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438: {{object.release_date|date:'d M Y'}} <br><br> \u0414\u0435\u0434\u043b\u0430\u0439\u043d: {{object.deadline|date:'d M Y'}} <br><br> <strong>\u0417\u0430\u0434\u0430\u043d\u0438\u0435:</strong> <br> {{object.description}} <br><br> <strong>\u0428\u0442\u0440\u0430\u0444:</strong> {{object.penalty}} <br><br> <a href=\"homeworks/new/{{object.id}}\"><button>\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0441\u0434\u0430\u0447\u0435</button></a> <hr/> {% endfor %} </ul> </body> </html>","title":"\u0428\u0430\u0431\u043b\u043e\u043d \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439:"},{"location":"lab2/task/#_15","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:"},{"location":"lab2/task/#_16","text":"","title":"\u0421\u0434\u0430\u0447\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439"},{"location":"lab2/task/#_17","text":"class SolutionForm(forms.ModelForm): class Meta: model = Solution fields = [ \"student\", \"solution_text\", ]","title":"\u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0441\u0434\u0430\u0447\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439:"},{"location":"lab2/task/#_18","text":"def solution_form_view(request, hw_id): context = {} form = SolutionForm(request.POST or None) homework = Homework.objects.get(pk=hw_id) if form.is_valid(): solution = form.save(commit=False) #\u043d\u0435 \u043a\u043e\u043c\u043c\u0438\u0442, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e fk homework \u0435\u0449\u0435 \u043d\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d solution.homework = homework solution.save() return HttpResponseRedirect('../../solution/success') context['form'] = form context['homework'] = homework return render(request, \"new_solution.html\", context) def solution_add_success_view(request): return render(request, \"solution_success_page.html\")","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0441\u0434\u0430\u0447\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439:"},{"location":"lab2/task/#_19","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>New Solution</title> </head> <body> <h3>{{ homework.subject.name }}</h3> <p><strong>\u0417\u0430\u0434\u0430\u043d\u0438\u0435:</strong> {{homework.description}}</p> <form method=\"POST\" enctype=\"multipart/form-data\"> {% csrf_token %} {{ form.as_p }} <input type=\"submit\" value=\"Submit\"> </form> </body> </html> <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Success</title> </head> <body> <h3>Your solution has been added successfully</h3> </body> </html>","title":"\u0428\u0430\u0431\u043b\u043e\u043d\u044b \u0434\u043b\u044f \u0441\u0434\u0430\u0447\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439:"},{"location":"lab2/task/#_20","text":"","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442:"},{"location":"lab2/task/#_21","text":"\u0423\u0447\u0438\u0442\u0435\u043b\u044f \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0430\u0434\u043c\u0438\u043d \u043f\u0430\u043d\u0435\u043b\u044c\u044e Django \u0438 \u0438\u043c\u0435\u044e\u0442 \u0442\u0430\u043c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0430. \u041e\u043d\u0438 \u043c\u043e\u0433\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c, \u043c\u0435\u043d\u044f\u0442\u044c, \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0438 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0438 \u043c\u0435\u043d\u044f\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u044f (\u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438).","title":"\u0412\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438"},{"location":"lab2/task/#_22","text":"","title":"\u0412\u044b\u0432\u043e\u0434 \u043e\u0446\u0435\u043d\u043e\u043a"},{"location":"lab2/task/#_23","text":"def register_view(request): subjects = Subject.objects.all() register = [] students = User.objects.filter(groups__name='Students') for student in students: student_marks = [] for subject in subjects: solutions = Solution.objects.filter(student=student, homework__subject=subject) subj_marks = [] for solution in solutions: if solution.mark is not None: subj_marks.append(solution.mark) student_marks.append((subject, subj_marks)) register.append((student, student_marks)) context = { 'student_data': register, } return render(request, 'show_marks.html', context)","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043e\u0446\u0435\u043d\u043e\u043a:"},{"location":"lab2/task/#_24","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Student</title> </head> <body> <h1>Register</h1> {% for student, student_marks in student_data %} <h2>{{ student.first_name }}</h2> <ul> {% for subject, marks in student_marks %} <li> {{ subject.name }}: {% if marks %} {% for mark in marks %} {{ mark }} {% endfor %} {% else %} No marks available {% endif %} </li> {% endfor %} </ul> {% endfor %} </body> </html>","title":"\u0428\u0430\u0431\u043b\u043e\u043d \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043e\u043a:"},{"location":"lab3/main/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0412\u0430\u0440\u0438\u0430\u043d\u0442 2 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438. \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u043a\u043d\u0438\u0433\u0430\u0445, \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0438 \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043b\u0430\u0445. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u0432 \u0411\u0414 \u0434\u043e\u043b\u0436\u043d\u044b \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438, \u0430\u0432\u0442\u043e\u0440 (\u044b), \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e, \u0433\u043e\u0434 \u0438\u0437\u0434\u0430\u043d\u0438\u044f, \u0440\u0430\u0437\u0434\u0435\u043b, \u0447\u0438\u0441\u043b\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u044d\u0442\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0437\u0430\u043b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0448\u0438\u0444\u0440 \u043a\u043d\u0438\u0433\u0438 \u0438 \u0434\u0430\u0442\u0430 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c. \u041a\u043d\u0438\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u0437\u0430\u043b\u0435. \u0421\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430, \u0424\u0418\u041e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f, \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0434\u0430\u0442\u0443 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u0430\u0434\u0440\u0435\u0441, \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u0447\u0435\u043d\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438. \u0427\u0438\u0442\u0430\u0442\u0435\u043b\u0438 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0437\u0430\u043b\u043e\u043c, \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0430\u043b \u0438 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0432\u044b\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u044e\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u043e\u043c, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c\u044e, \u0442\u043e \u0435\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432 \u0437\u0430\u043b\u0435. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043a\u043d\u0438\u0433\u0438 \u0438 \u0441\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u044b\u0435. \u0428\u0438\u0444\u0440 \u043a\u043d\u0438\u0433\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c\u0441\u044f \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0430 \u043d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0435\u0440\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u0440\u044e \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438: \u041a\u0430\u043a\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u044b \u0437\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c? \u041a\u0442\u043e \u0438\u0437 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u0432\u0437\u044f\u043b \u043a\u043d\u0438\u0433\u0443 \u0431\u043e\u043b\u0435\u0435 \u043c\u0435\u0441\u044f\u0446\u0430 \u0442\u043e\u043c\u0443 \u043d\u0430\u0437\u0430\u0434? \u0417\u0430 \u043a\u0435\u043c \u0438\u0437 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u044b \u043a\u043d\u0438\u0433\u0438, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 2? \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u043c\u043b\u0430\u0434\u0448\u0435 20 \u043b\u0435\u0442? \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043d\u043e\u043c \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0438 \u0438\u043c\u0435\u044e\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u0441\u0440\u0435\u0434\u043d\u0435\u0435, \u0432\u044b\u0441\u0448\u0435\u0435, \u0443\u0447\u0435\u043d\u0443\u044e \u0441\u0442\u0435\u043f\u0435\u043d\u044c?","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab3/main/#_1","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab3/main/#2","text":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u043d\u0438\u043a\u043e\u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438. \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u043a\u043d\u0438\u0433\u0430\u0445, \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0438 \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043b\u0430\u0445. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u0432 \u0411\u0414 \u0434\u043e\u043b\u0436\u043d\u044b \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438, \u0430\u0432\u0442\u043e\u0440 (\u044b), \u0438\u0437\u0434\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e, \u0433\u043e\u0434 \u0438\u0437\u0434\u0430\u043d\u0438\u044f, \u0440\u0430\u0437\u0434\u0435\u043b, \u0447\u0438\u0441\u043b\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u044d\u0442\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0437\u0430\u043b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0448\u0438\u0444\u0440 \u043a\u043d\u0438\u0433\u0438 \u0438 \u0434\u0430\u0442\u0430 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c. \u041a\u043d\u0438\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u0437\u0430\u043b\u0435. \u0421\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u043d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430, \u0424\u0418\u041e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f, \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0434\u0430\u0442\u0443 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u0430\u0434\u0440\u0435\u0441, \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u0447\u0435\u043d\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u0438. \u0427\u0438\u0442\u0430\u0442\u0435\u043b\u0438 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0437\u0430\u043b\u043e\u043c, \u043c\u043e\u0433\u0443\u0442 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0430\u043b \u0438 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u0432\u044b\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u0430\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u044e\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u043e\u043c, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c\u044e, \u0442\u043e \u0435\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432 \u0437\u0430\u043b\u0435. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043a\u043d\u0438\u0433\u0438 \u0438 \u0441\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u044b\u0435. \u0428\u0438\u0444\u0440 \u043a\u043d\u0438\u0433\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c\u0441\u044f \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0435\u0440\u0435\u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0430 \u043d\u043e\u043c\u0435\u0440 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0435\u0440\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u0440\u044e \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438: \u041a\u0430\u043a\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u044b \u0437\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c? \u041a\u0442\u043e \u0438\u0437 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u0432\u0437\u044f\u043b \u043a\u043d\u0438\u0433\u0443 \u0431\u043e\u043b\u0435\u0435 \u043c\u0435\u0441\u044f\u0446\u0430 \u0442\u043e\u043c\u0443 \u043d\u0430\u0437\u0430\u0434? \u0417\u0430 \u043a\u0435\u043c \u0438\u0437 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u044b \u043a\u043d\u0438\u0433\u0438, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 2? \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u043c\u043b\u0430\u0434\u0448\u0435 20 \u043b\u0435\u0442? \u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043d\u043e\u043c \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0438 \u0438\u043c\u0435\u044e\u0442 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u0441\u0440\u0435\u0434\u043d\u0435\u0435, \u0432\u044b\u0441\u0448\u0435\u0435, \u0443\u0447\u0435\u043d\u0443\u044e \u0441\u0442\u0435\u043f\u0435\u043d\u044c?","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 2"},{"location":"lab3/assignments/create/","text":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c URL : /assignments/new Method : POST Auth required : YES Permission required : None Success Responses Code : 201 Created Content : { \"id\": 2, \"date_assigned\": \"2023-12-01\", \"date_returned\": \"2023-12-05\", \"copy\": 4, \"reader\": 1 }","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438"},{"location":"lab3/assignments/create/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u043e\u0435 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c URL : /assignments/new Method : POST Auth required : YES Permission required : None","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438"},{"location":"lab3/assignments/create/#success-responses","text":"Code : 201 Created Content : { \"id\": 2, \"date_assigned\": \"2023-12-01\", \"date_returned\": \"2023-12-05\", \"copy\": 4, \"reader\": 1 }","title":"Success Responses"},{"location":"lab3/assignments/info/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433\u0430\u0445 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433 \u043f\u043e id URL : assignments/<int:pk> Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"copy\": { \"id\": 1, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, \"reader\": { \"id\": 1, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }, \"education\": \"pre-elementary\", \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"if_phd\": false, \"library_card_number\": \"3\" }, \"date_assigned\": \"2023-12-03\", \"date_returned\": null }","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433\u0430\u0445"},{"location":"lab3/assignments/info/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433 \u043f\u043e id URL : assignments/<int:pk> Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433\u0430\u0445"},{"location":"lab3/assignments/info/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"copy\": { \"id\": 1, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, \"reader\": { \"id\": 1, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }, \"education\": \"pre-elementary\", \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"if_phd\": false, \"library_card_number\": \"3\" }, \"date_assigned\": \"2023-12-03\", \"date_returned\": null }","title":"Success Responses"},{"location":"lab3/assignments/list/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f\u0445 \u043a\u043d\u0438\u0433 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f\u0445 \u043a\u043d\u0438\u0433 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u043c\u0438 URL : api/assignments/all Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : [ { \"id\": 1, \"copy\": { \"id\": 1, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, \"reader\": { \"id\": 1, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }, \"education\": \"pre-elementary\", \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"if_phd\": false, \"library_card_number\": \"3\" }, \"date_assigned\": \"2023-12-03\", \"date_returned\": null } ]","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f\u0445 \u043a\u043d\u0438\u0433"},{"location":"lab3/assignments/list/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f\u0445 \u043a\u043d\u0438\u0433 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u043c\u0438 URL : api/assignments/all Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u044f\u0445 \u043a\u043d\u0438\u0433"},{"location":"lab3/assignments/list/#success-responses","text":"Code : 200 OK Content : [ { \"id\": 1, \"copy\": { \"id\": 1, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, \"reader\": { \"id\": 1, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }, \"education\": \"pre-elementary\", \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"if_phd\": false, \"library_card_number\": \"3\" }, \"date_assigned\": \"2023-12-03\", \"date_returned\": null } ]","title":"Success Responses"},{"location":"lab3/assignments/update/","text":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433\u0438 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c URL : assignments/update/<int:pk> Method : PUT Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"date_assigned\": \"2023-12-04\", \"date_returned\": \"2023-12-05\", \"copy\": 1, \"reader\": 1 }","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433\u0438"},{"location":"lab3/assignments/update/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433\u0438 \u0437\u0430 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u043c URL : assignments/update/<int:pk> Method : PUT Auth required : YES Permission required : None","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438 \u043a\u043d\u0438\u0433\u0438"},{"location":"lab3/assignments/update/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"date_assigned\": \"2023-12-04\", \"date_returned\": \"2023-12-05\", \"copy\": 1, \"reader\": 1 }","title":"Success Responses"},{"location":"lab3/auth/token/","text":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0442\u043e\u043a\u0435\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f URL : /api/auth/token Method : POST Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"token\": \"60478bf9a8be3e6342d0592fba6aa94f0e946f74\" }","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"},{"location":"lab3/auth/token/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0442\u043e\u043a\u0435\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f URL : /api/auth/token Method : POST Auth required : YES Permission required : None","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"},{"location":"lab3/auth/token/#success-responses","text":"Code : 200 OK Content : { \"token\": \"60478bf9a8be3e6342d0592fba6aa94f0e946f74\" }","title":"Success Responses"},{"location":"lab3/auth/users/","text":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f URL : /api/auth/users Method : POST Auth required : YES Permission required : None Success Responses Code : 201 Created Content : { \"email\": \"\", \"username\": \"roma\", \"id\": 5 }","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"},{"location":"lab3/auth/users/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f URL : /api/auth/users Method : POST Auth required : YES Permission required : None","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"},{"location":"lab3/auth/users/#success-responses","text":"Code : 201 Created Content : { \"email\": \"\", \"username\": \"roma\", \"id\": 5 }","title":"Success Responses"},{"location":"lab3/books/create/","text":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043a\u043d\u0438\u0433\u0438 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043d\u0438\u0433\u0443 URL : /books/new Method : POST Auth required : YES Permission required : None Success Responses Code : 201 Created Content : { \"id\": 3, \"name\": \"All Quiet on the Western Front\", \"author\": \"Erich Maria Remarque\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2022-10-17\", \"cipher\": \"3\" }","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043a\u043d\u0438\u0433\u0438"},{"location":"lab3/books/create/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043d\u0438\u0433\u0443 URL : /books/new Method : POST Auth required : YES Permission required : None","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043a\u043d\u0438\u0433\u0438"},{"location":"lab3/books/create/#success-responses","text":"Code : 201 Created Content : { \"id\": 3, \"name\": \"All Quiet on the Western Front\", \"author\": \"Erich Maria Remarque\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2022-10-17\", \"cipher\": \"3\" }","title":"Success Responses"},{"location":"lab3/books/info/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u0438\u0433\u0435 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u0438\u0433\u0435 \u043f\u043e id URL : /books/<int:pk> Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u0438\u0433\u0435"},{"location":"lab3/books/info/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u0438\u0433\u0435 \u043f\u043e id URL : /books/<int:pk> Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u0438\u0433\u0435"},{"location":"lab3/books/info/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }","title":"Success Responses"},{"location":"lab3/books/list/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043d\u0438\u0433\u0430\u0445 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043d\u0438\u0433\u0430\u0445 URL : api/books/all Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : [ { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, { \"id\": 2, \"name\": \"Brave New World\", \"author\": \"Aldous Huxley\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2021-01-01\", \"cipher\": \"2\" } ]","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043d\u0438\u0433\u0430\u0445"},{"location":"lab3/books/list/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043d\u0438\u0433\u0430\u0445 URL : api/books/all Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043d\u0438\u0433\u0430\u0445"},{"location":"lab3/books/list/#success-responses","text":"Code : 200 OK Content : [ { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, { \"id\": 2, \"name\": \"Brave New World\", \"author\": \"Aldous Huxley\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2021-01-01\", \"cipher\": \"2\" } ]","title":"Success Responses"},{"location":"lab3/books/update/","text":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043d\u0438\u0433\u0435 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u0438\u0433\u0435 URL : books/update/<int:pk> Method : PUT Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 3, \"name\": \"All Quiet on the Western Front\", \"author\": \"Erich Maria Remarque\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2022-10-17\", \"cipher\": \"3\" }","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043d\u0438\u0433\u0435"},{"location":"lab3/books/update/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043d\u0438\u0433\u0435 URL : books/update/<int:pk> Method : PUT Auth required : YES Permission required : None","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043d\u0438\u0433\u0435"},{"location":"lab3/books/update/#success-responses","text":"Code : 200 OK Content : { \"id\": 3, \"name\": \"All Quiet on the Western Front\", \"author\": \"Erich Maria Remarque\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2022-10-17\", \"cipher\": \"3\" }","title":"Success Responses"},{"location":"lab3/copys/create/","text":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043f\u0438\u0438 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u043f\u0438\u044e URL : /copys/new Method : POST Auth required : YES Permission required : None Success Responses Code : 201 Created Content : { \"id\": 6, \"book\": 3, \"hall\": 2 }","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043f\u0438\u0438"},{"location":"lab3/copys/create/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u043f\u0438\u044e URL : /copys/new Method : POST Auth required : YES Permission required : None","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043f\u0438\u0438"},{"location":"lab3/copys/create/#success-responses","text":"Code : 201 Created Content : { \"id\": 6, \"book\": 3, \"hall\": 2 }","title":"Success Responses"},{"location":"lab3/copys/info/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043f\u0438\u0438 \u043a\u043d\u0438\u0433\u0438 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043f\u0438\u0438 \u043a\u043d\u0438\u0433\u0438 \u043f\u043e id URL : /copys/<int:pk> Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043f\u0438\u0438 \u043a\u043d\u0438\u0433\u0438"},{"location":"lab3/copys/info/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043f\u0438\u0438 \u043a\u043d\u0438\u0433\u0438 \u043f\u043e id URL : /copys/<int:pk> Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043f\u0438\u0438 \u043a\u043d\u0438\u0433\u0438"},{"location":"lab3/copys/info/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }","title":"Success Responses"},{"location":"lab3/copys/list/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043e\u043f\u0438\u044f\u0445 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043e\u043f\u0438\u044f\u0445 URL : api/copys/all Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : [ { \"id\": 1, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, { \"id\": 2, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, { \"id\": 3, \"book\": { \"id\": 2, \"name\": \"Brave New World\", \"author\": \"Aldous Huxley\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2021-01-01\", \"cipher\": \"2\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, { \"id\": 4, \"book\": { \"id\": 2, \"name\": \"Brave New World\", \"author\": \"Aldous Huxley\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2021-01-01\", \"cipher\": \"2\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, { \"id\": 5, \"book\": { \"id\": 2, \"name\": \"Brave New World\", \"author\": \"Aldous Huxley\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2021-01-01\", \"cipher\": \"2\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } } ]","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043e\u043f\u0438\u044f\u0445"},{"location":"lab3/copys/list/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043e\u043f\u0438\u044f\u0445 URL : api/copys/all Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043a\u043e\u043f\u0438\u044f\u0445"},{"location":"lab3/copys/list/#success-responses","text":"Code : 200 OK Content : [ { \"id\": 1, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, { \"id\": 2, \"book\": { \"id\": 1, \"name\": \"A Clockwork Orange\", \"author\": \"Anthony Burgess\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2020-01-01\", \"cipher\": \"1\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, { \"id\": 3, \"book\": { \"id\": 2, \"name\": \"Brave New World\", \"author\": \"Aldous Huxley\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2021-01-01\", \"cipher\": \"2\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, { \"id\": 4, \"book\": { \"id\": 2, \"name\": \"Brave New World\", \"author\": \"Aldous Huxley\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2021-01-01\", \"cipher\": \"2\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } }, { \"id\": 5, \"book\": { \"id\": 2, \"name\": \"Brave New World\", \"author\": \"Aldous Huxley\", \"publisher\": \"AST Publishers\", \"publishing_year\": \"2021-01-01\", \"cipher\": \"2\" }, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 } } ]","title":"Success Responses"},{"location":"lab3/copys/update/","text":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043f\u0438\u0438 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043f\u0438\u0438 URL : copys/update/<int:pk> Method : PUT Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"book\": 1, \"hall\": 1 }","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043f\u0438\u0438"},{"location":"lab3/copys/update/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043f\u0438\u0438 URL : copys/update/<int:pk> Method : PUT Auth required : YES Permission required : None","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043f\u0438\u0438"},{"location":"lab3/copys/update/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"book\": 1, \"hall\": 1 }","title":"Success Responses"},{"location":"lab3/halls/create/","text":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043b\u0430 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0437\u0430\u043b URL : /halls/new Method : POST Auth required : YES Permission required : None Success Responses Code : 201 Created Content : { \"id\": 2, \"sequence_number\": 2, \"name\": \"German Authors\", \"capacity\": 30 }","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043b\u0430"},{"location":"lab3/halls/create/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0447\u0438\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0437\u0430\u043b URL : /halls/new Method : POST Auth required : YES Permission required : None","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043b\u0430"},{"location":"lab3/halls/create/#success-responses","text":"Code : 201 Created Content : { \"id\": 2, \"sequence_number\": 2, \"name\": \"German Authors\", \"capacity\": 30 }","title":"Success Responses"},{"location":"lab3/halls/info/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043b\u0435 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043b\u0435 \u043f\u043e id URL : /halls/<int:pk> Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 30 }","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043b\u0435"},{"location":"lab3/halls/info/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043b\u0435 \u043f\u043e id URL : /halls/<int:pk> Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043b\u0435"},{"location":"lab3/halls/info/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 30 }","title":"Success Responses"},{"location":"lab3/halls/list/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043b\u0430\u0445 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043b\u0430\u0445 URL : api/halls/all Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : [ { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 30 } ]","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043b\u0430\u0445"},{"location":"lab3/halls/list/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043b\u0430\u0445 URL : api/halls/all Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0437\u0430\u043b\u0430\u0445"},{"location":"lab3/halls/list/#success-responses","text":"Code : 200 OK Content : [ { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 30 } ]","title":"Success Responses"},{"location":"lab3/halls/update/","text":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u043b\u0435 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043b\u0435 URL : halls/update/<int:pk> Method : PUT Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u043b\u0435"},{"location":"lab3/halls/update/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0437\u0430\u043b\u0435 URL : halls/update/<int:pk> Method : PUT Auth required : YES Permission required : None","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0437\u0430\u043b\u0435"},{"location":"lab3/halls/update/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }","title":"Success Responses"},{"location":"lab3/readers/create/","text":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u043c \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f URL : /readers/new Method : POST Auth required : YES Permission required : None Success Responses Code : 201 Created Content : { \"id\": 2, \"name\": \"Arina\", \"second_name\": \"Vladimirovna\", \"surname\": \"Sokolovskaya\", \"passport\": \"AA2222222\", \"birth_date\": \"2003-09-13\", \"address\": \"Mem avenue, 3\", \"phone_number\": \"79811111111\", \"education\": \"1\", \"if_phd\": false, \"library_card_number\": \"2\", \"hall\": 2 }","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u043c \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435"},{"location":"lab3/readers/create/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f URL : /readers/new Method : POST Auth required : YES Permission required : None","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u043c \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435"},{"location":"lab3/readers/create/#success-responses","text":"Code : 201 Created Content : { \"id\": 2, \"name\": \"Arina\", \"second_name\": \"Vladimirovna\", \"surname\": \"Sokolovskaya\", \"passport\": \"AA2222222\", \"birth_date\": \"2003-09-13\", \"address\": \"Mem avenue, 3\", \"phone_number\": \"79811111111\", \"education\": \"1\", \"if_phd\": false, \"library_card_number\": \"2\", \"hall\": 2 }","title":"Success Responses"},{"location":"lab3/readers/info/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435 \u043f\u043e id URL : /readers/<int:pk> Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }, \"education\": \"pre-elementary\", \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"if_phd\": false, \"library_card_number\": \"1\" }","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435"},{"location":"lab3/readers/info/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435 \u043f\u043e id URL : /readers/<int:pk> Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435"},{"location":"lab3/readers/info/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }, \"education\": \"pre-elementary\", \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"if_phd\": false, \"library_card_number\": \"1\" }","title":"Success Responses"},{"location":"lab3/readers/list/","text":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 URL : api/readers/all Method : GET Auth required : YES Permission required : None Success Responses Code : 200 OK Content : [ { \"id\": 1, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }, \"education\": \"pre-elementary\", \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"if_phd\": false, \"library_card_number\": \"1\" } ]","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445"},{"location":"lab3/readers/list/#_1","text":"\u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445 URL : api/readers/all Method : GET Auth required : YES Permission required : None","title":"\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044f\u0445"},{"location":"lab3/readers/list/#success-responses","text":"Code : 200 OK Content : [ { \"id\": 1, \"hall\": { \"id\": 1, \"sequence_number\": 1, \"name\": \"British Literature\", \"capacity\": 40 }, \"education\": \"pre-elementary\", \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"if_phd\": false, \"library_card_number\": \"1\" } ]","title":"Success Responses"},{"location":"lab3/readers/update/","text":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435 URL : readers/update/<int:pk> Method : PUT Auth required : YES Permission required : None Success Responses Code : 200 OK Content : { \"id\": 1, \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"education\": \"0\", \"if_phd\": false, \"library_card_number\": \"3\", \"hall\": 1 }","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435"},{"location":"lab3/readers/update/#_1","text":"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435 URL : readers/update/<int:pk> Method : PUT Auth required : YES Permission required : None","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435"},{"location":"lab3/readers/update/#success-responses","text":"Code : 200 OK Content : { \"id\": 1, \"name\": \"Maria\", \"second_name\": \"Vladimirovna\", \"surname\": \"Pronina\", \"passport\": \"AA1111111\", \"birth_date\": \"2003-10-27\", \"address\": \"Lol Street, 15\", \"phone_number\": \"79810000000\", \"education\": \"0\", \"if_phd\": false, \"library_card_number\": \"3\", \"hall\": 1 }","title":"Success Responses"},{"location":"lab4/main/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 vue.js. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 main.js import './assets/main.css' import { createApp } from 'vue' import App from './App.vue' import router from './router' const app = createApp(App) app.use(router) app.mount('#app') services/api.js import axios from 'axios' const api = axios.create({ baseURL: 'http://127.0.0.1:8000/api', headers: { 'Content-Type': 'application/json' } }) export default api; router/index.js import { createRouter, createWebHistory } from 'vue-router' import HomeView from '../views/HomeView.vue' import RegistrationView from '../views/RegistrationView.vue' import BooksView from '../views/BooksView.vue' import RandomBookView from '../views/RandomBookView.vue' import NewBookComponent from '../components/NewBook.vue' import LoginComponent from '../components/Login.vue' import LogoutComponent from '../components/Logout.vue' import ReadersComponent from '../components/AllReaders.vue' import NewReaderComponent from '../components/NewReader.vue' import AssignmentsComponent from '../components/AllAssignments.vue' import AssignmentDetailsComponent from '../components/AssignmentDetails.vue' import EditAssignmentComponent from '../components/EditAssignment.vue' import NewAssignmentComponent from '../components/NewAssignment.vue' import HallsComponent from '../components/AllHalls.vue' import NewHallComponent from '../components/NewHall.vue' import CopiesComponent from '../components/AllCopies.vue' import NewCopyComponent from '../components/NewCopy.vue' const router = createRouter({ history: createWebHistory(import.meta.env.BASE_URL), routes: [ { path: '/registration', name: 'registration', component: RegistrationView }, { path: '/books', name: 'books', component: BooksView }, { path: '/books/random', name: 'randombook', component: RandomBookView }, { path: '/books/new', name: 'newBook', component: NewBookComponent, meta: { requiredAuth: true }, }, { path: '/login', name: 'login', component: LoginComponent, }, { path: '/logout', name: 'logout', component: LogoutComponent, }, { path: '/readers', name: 'readers', component: ReadersComponent, meta: { requiredAuth: true }, }, { path: '/readers/new', name: 'newReader', component: NewReaderComponent, meta: { requiredAuth: true }, }, { path: '/assignments', name: 'Assignments', component: AssignmentsComponent, meta: { requiredAuth: true }, }, { path: '/assignments/:assignmentId', name: 'AssignmentDetails', component: AssignmentDetailsComponent, meta: { requiredAuth: true }, }, { path: '/assignments/:assignmentId/edit', name: 'EditAssignment', component: EditAssignmentComponent, meta: { requiredAuth: true }, }, { path: '/halls', name: 'Halls', component: HallsComponent, meta: { requiredAuth: true }, }, { path: '/copies', name: 'Copies', component: CopiesComponent, meta: { requiredAuth: true }, }, { path: '/assignments/new', name: 'newAssignment', component: NewAssignmentComponent, meta: { requiredAuth: true }, }, { path: '/halls/new', name: 'newHall', component: NewHallComponent, meta: { requiredAuth: true }, }, { path: '/copies/new', name: 'newCopy', component: NewCopyComponent, meta: { requiredAuth: true }, }, ] }); router.beforeEach((to, from, next) => { if (to.meta.requiredAuth && !localStorage.getItem('token')) { next('/login'); } else { next(); } }) export default router \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b Registration.vue <template> <div class=\"registraton_container\"> <h1>Registration</h1> <form @submit=\"register\"> <label for=\"email\">Email:</label><br> <input v-model=\"email\" type=\"text\" id=\"email\" name=\"email\"><br> <label for=\"username\">Username:</label><br> <input v-model=\"username\" type=\"text\" id=\"username\" name=\"username\"><br> <label for=\"password\">Password:</label><br> <input v-model=\"password\" type=\"text\" id=\"password\" name=\"password\"><br> <button type=\"submit\">Submit</button> </form> </div> </template> <script> import axios from 'axios'; export default { data() { return { email: '', username: '', password: '' } }, methods: { register(event) { event.preventDefault(); const userData = { email: this.email, username: this.username, password: this.password } axios.post('http://127.0.0.1:8000/api/auth/users/', userData) .then(response => { localStorage.setItem('userData', JSON.stringify(formData)); }) .catch(error => { // console.log(userData); // console.log(error); console.log('Something went wrong :(') }) } } } </script> <style scoped> input { margin-bottom: 20px; } </style> Login.vue <template> <div> <h2>Login</h2> <form @submit.prevent=\"login\"> <label for=\"username\">Username:</label> <input v-model=\"username\" type=\"text\" id=\"username\" required> <label for=\"password\">Password:</label> <input v-model=\"password\" type=\"password\" id=\"password\" required> <button type=\"submit\">Login</button> </form> <router-link to=\"/registration\" class=\"link\">I don't have an account</router-link> </div> </template> <script> import api from '@/services/api'; export default { data() { return { username: '', password: '', }; }, methods: { login() { const credentials = { username: this.username, password: this.password, }; api.post('auth/token', credentials) .then(response => { const token = response.data.token; localStorage.setItem('token', token); this.$router.push('/books'); }) .catch(error => { console.error('Login failed:', error); }); }, }, }; </script> <style scoped> .link { color: #fff; font-size: 17px; } form { margin-bottom: 20px; } </style> Logout.vue <template> <h2>{{ username }}, are you sure you want to logout?</h2> <button @click=\"logout\">Yes</button> </template> <script> import api from '../services/api'; import router from '../router'; export default { data() { return { username: '' }; }, mounted() { const token = localStorage.getItem('token'); if (!token) { router.push('/login'); return; } api.get('auth/users/me/', { headers: { Authorization: `Token ${token}` } }) .then(response => { this.username = response.data.username; this.username = this.username.charAt(0).toUpperCase() + this.username.slice(1); }) .catch(error => { console.error(error); }) }, methods: { logout() { localStorage.removeItem('token'); this.$router.push('/login'); } } } </script> Navbar.vue <template> <nav> <h1>Navigation</h1> <ul> <li> <ul label=\"Books\"> <li><router-link to=\"/books\">All Books</router-link></li> <li><router-link to=\"/books/new\">Add new book</router-link></li> <li><router-link to=\"/books/random\">Get random book</router-link></li> </ul> </li> <li> <ul label=\"Readers\"> <li><router-link to=\"/readers\">All Readers</router-link></li> <li><router-link to=\"/readers/new\">Add new reader</router-link></li> </ul> </li> <li> <ul label=\"Assignments\"> <li><router-link to=\"/assignments\">All Assignments</router-link></li> <li><router-link to=\"/assignments/new\">Add new assignment</router-link></li> </ul> </li> <li> <ul label=\"Halls\"> <li><router-link to=\"/halls\">All Halls</router-link></li> <li><router-link to=\"/halls/new\">Add new hall</router-link></li> </ul> </li> <li> <ul label=\"Copies\"> <li><router-link to=\"/copies\">All Copies</router-link></li> <li><router-link to=\"/copies/new\">Add new copy</router-link></li> </ul> </li> </ul> <h2><router-link to=\"/logout\">Log out</router-link></h2> </nav> </template> <style scoped> ul:before { content: attr(label); font-size: 120%; font-weight: bold; color: #000; } h1 { color: #000; padding-left: 20px; } nav { padding-right: 50px; background-color: #f0f0f0; line-height: 200%; margin-right: 75px; width: 250px; height: 100%; position: fixed; top: 0; left: 0; } ul { padding-inline-start: 10px; } </style> \u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0434\u043b\u044f assignment AllAssignment.vue <template> <h1>All Assignments</h1> <hr/> <div v-for=\"assignment in Assignments\" :key=\"assignment.id\"> <h3> {{ assignment.copy.book.name }}</h3> <h4>{{ assignment.reader.surname }} {{ assignment.reader.name }}</h4> <br/> <button @click=\"pushRouter(assignment.id)\">Full assignemnt information</button> <hr/> </div> </template> <script> import api from '@/services/api' import router from '@/router' export default { data() { return { Assignments: [], } }, methods: { pushRouter(id) { const url = '/assignments/' + id.toString(); router.push(url); } }, mounted () { api.get('/assignments/all') .then(response => { this.Assignments = response.data; }) .catch(error => { console.error(error); }) } } </script> AssignmentDetails.vue <template> <div v-if=\"assignment\"> <h1>Assignment Details</h1> <h3>{{ assignment.copy.book.name }} {{ assignment.copy.book.author }}</h3> <h4>Taken by: {{ assignment.reader.name }} {{ assignment.reader.surname }}</h4> <p>Assigned: {{ assignment.date_assigned }}</p> <p v-if=\"assignment.date_returned\">Returned: {{ assignment.date_returned }}</p> <p v-else>not returned yet</p> <button><router-link :to=\"{name: 'EditAssignment', params: { assignmentId: $assignmentId } }\">Edit</router-link></button><br><br> <router-link to=\"/assignments\">Go back</router-link> </div> <p v-else>Loading ...</p> </template> <script> import api from '@/services/api' export default { data() { return { assignment: null, assignmentId: null, } }, mounted() { this.assignmentId = this.$route.params.assignmentId; const url = '/assignments/' + this.assignmentId.toString(); api.get(url) .then(response => { this.assignment = response.data; }) .catch(error => { console.error(error); }) } } </script> EditAssignment.vue <template> <div> <h1>Edit Assignment</h1> <form @submit.prevent=\"submitForm\"> <label>Reader:</label><br> <select v-model=\"selectedReader\"> <option v-for=\"reader in Readers\" :key=\"reader.id\" :value=\"reader.id\"> {{ reader.name }} {{ reader.surname }} </option> </select><br><br> <label>Copy:</label><br> <select v-model=\"selectedCopy\"> <option v-for=\"copy in Copies\" :key=\"copy.id\" :value=\"copy.id\"> {{ copy.id }}. {{ copy.book.name }} by {{ copy.book.author }} </option> </select><br><br> <label for=\"dateAssigned\">Date Assigned:</label><br> <input v-model=\"dateAssigned\" type=\"date\" id=\"dateAssigned\" /><br><br> <label for=\"dateReturned\">Date Returned:</label><br> <input v-model=\"dateReturned\" type=\"date\" id=\"dateReturned\" /><br><br> <button type=\"submit\">Save changes</button> </form> </div> </template> <script> import api from '@/services/api'; import router from '@/router'; export default { data() { return { assignmentId: null, Readers: [], Copies: [], selectedReader: null, selectedCopy: null, dateAssigned: null, dateReturned: null, }; }, methods: { async fetchAssignment() { try { const assignmentId = this.$route.params.assignmentId; const url = '/assignments/' + assignmentId.toString(); const response = await api.get(url); const assignment = response.data; console.log(response); this.selectedReader = assignment.reader.id; this.selectedCopy = assignment.copy.id; this.dateAssigned = assignment.date_assigned; this.dateReturned = assignment.date_returned; } catch (error) { console.error(error); } }, submitForm() { const url = '/assignments/update/' + this.assignmentId.toString(); const data = { reader: this.selectedReader, copy: this.selectedCopy, date_assigned: this.dateAssigned, date_returned: this.dateReturned, } console.log(data); api.patch(url, data) .then(response => { const to = '/assignments/' + this.assignmentId.toString(); router.push(to); }) .catch(error => { console.error(error); }); }, }, mounted() { this.fetchAssignment(); this.assignmentId = this.$route.params.assignmentId; api.get('/readers/all') .then(response => { this.Readers = response.data; }) .catch(error => { console.error(error); }); api.get('/copys/all') .then(response => { this.Copies = response.data; }) .catch(error => { console.error(error); }); }, }; </script> NewAssignment.vue <template> <div class=\"new-assignment_container\"> <h1>New Assignment</h1> <form @submit=\"addNewAssignment\"> <label>Reader:</label><br> <select v-model=\"reader\" id=\"reader\"> <option v-for=\"reader in readers\" :key=\"reader.id\" :value=\"reader.id\">{{ reader.name }} {{ reader.surname }}</option> </select><br><br> <label>Copy:</label><br> <select v-model=\"copy\" id=\"copy\"> <option v-for=\"copy in copies\" :key=\"copy.id\" :value=\"copy.id\">{{ copy.book.name }} {{ copy.book.author }}</option> </select><br><br> <label>Date Assigned:</label><br> <input v-model=\"dateAssigned\" id=\"dateAssigned\" type=\"date\"><br> <label>Date Returned:</label><br> <input v-model=\"dateReturned\" id=\"dateReturned\" type=\"date\"><br> <button type=\"submit\">Submit</button> </form> </div> </template> <script> import api from '@/services/api'; export default { data() { return { copies: [], readers: [], copy: null, reader: null, dateAssigned: null, dateReturned: null, } }, methods: { addNewAssignment(event) { const userData = { reader: this.reader, copy: this.copy, date_assigned: this.dateAssigned, date_returned: this.dateReturned, } api.post('/assignments/new', userData) .then(response => { localStorage.setItem('formData', JSON.stringify(userData)); }) .catch(error => { console.error(error); }) } }, mounted () { api.get('/readers/all') .then(response => { this.readers = response.data; }) .catch(error => { console.error(error); }) api.get('/copys/all') .then(response => { this.copies = response.data; }) .catch(error => { console.error(error); }) } } </script> <style scoped> input { margin-bottom: 20px; } </style>","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab4/main/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 vue.js.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab4/main/#_2","text":"main.js import './assets/main.css' import { createApp } from 'vue' import App from './App.vue' import router from './router' const app = createApp(App) app.use(router) app.mount('#app') services/api.js import axios from 'axios' const api = axios.create({ baseURL: 'http://127.0.0.1:8000/api', headers: { 'Content-Type': 'application/json' } }) export default api; router/index.js import { createRouter, createWebHistory } from 'vue-router' import HomeView from '../views/HomeView.vue' import RegistrationView from '../views/RegistrationView.vue' import BooksView from '../views/BooksView.vue' import RandomBookView from '../views/RandomBookView.vue' import NewBookComponent from '../components/NewBook.vue' import LoginComponent from '../components/Login.vue' import LogoutComponent from '../components/Logout.vue' import ReadersComponent from '../components/AllReaders.vue' import NewReaderComponent from '../components/NewReader.vue' import AssignmentsComponent from '../components/AllAssignments.vue' import AssignmentDetailsComponent from '../components/AssignmentDetails.vue' import EditAssignmentComponent from '../components/EditAssignment.vue' import NewAssignmentComponent from '../components/NewAssignment.vue' import HallsComponent from '../components/AllHalls.vue' import NewHallComponent from '../components/NewHall.vue' import CopiesComponent from '../components/AllCopies.vue' import NewCopyComponent from '../components/NewCopy.vue' const router = createRouter({ history: createWebHistory(import.meta.env.BASE_URL), routes: [ { path: '/registration', name: 'registration', component: RegistrationView }, { path: '/books', name: 'books', component: BooksView }, { path: '/books/random', name: 'randombook', component: RandomBookView }, { path: '/books/new', name: 'newBook', component: NewBookComponent, meta: { requiredAuth: true }, }, { path: '/login', name: 'login', component: LoginComponent, }, { path: '/logout', name: 'logout', component: LogoutComponent, }, { path: '/readers', name: 'readers', component: ReadersComponent, meta: { requiredAuth: true }, }, { path: '/readers/new', name: 'newReader', component: NewReaderComponent, meta: { requiredAuth: true }, }, { path: '/assignments', name: 'Assignments', component: AssignmentsComponent, meta: { requiredAuth: true }, }, { path: '/assignments/:assignmentId', name: 'AssignmentDetails', component: AssignmentDetailsComponent, meta: { requiredAuth: true }, }, { path: '/assignments/:assignmentId/edit', name: 'EditAssignment', component: EditAssignmentComponent, meta: { requiredAuth: true }, }, { path: '/halls', name: 'Halls', component: HallsComponent, meta: { requiredAuth: true }, }, { path: '/copies', name: 'Copies', component: CopiesComponent, meta: { requiredAuth: true }, }, { path: '/assignments/new', name: 'newAssignment', component: NewAssignmentComponent, meta: { requiredAuth: true }, }, { path: '/halls/new', name: 'newHall', component: NewHallComponent, meta: { requiredAuth: true }, }, { path: '/copies/new', name: 'newCopy', component: NewCopyComponent, meta: { requiredAuth: true }, }, ] }); router.beforeEach((to, from, next) => { if (to.meta.requiredAuth && !localStorage.getItem('token')) { next('/login'); } else { next(); } }) export default router","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"lab4/main/#_3","text":"Registration.vue <template> <div class=\"registraton_container\"> <h1>Registration</h1> <form @submit=\"register\"> <label for=\"email\">Email:</label><br> <input v-model=\"email\" type=\"text\" id=\"email\" name=\"email\"><br> <label for=\"username\">Username:</label><br> <input v-model=\"username\" type=\"text\" id=\"username\" name=\"username\"><br> <label for=\"password\">Password:</label><br> <input v-model=\"password\" type=\"text\" id=\"password\" name=\"password\"><br> <button type=\"submit\">Submit</button> </form> </div> </template> <script> import axios from 'axios'; export default { data() { return { email: '', username: '', password: '' } }, methods: { register(event) { event.preventDefault(); const userData = { email: this.email, username: this.username, password: this.password } axios.post('http://127.0.0.1:8000/api/auth/users/', userData) .then(response => { localStorage.setItem('userData', JSON.stringify(formData)); }) .catch(error => { // console.log(userData); // console.log(error); console.log('Something went wrong :(') }) } } } </script> <style scoped> input { margin-bottom: 20px; } </style> Login.vue <template> <div> <h2>Login</h2> <form @submit.prevent=\"login\"> <label for=\"username\">Username:</label> <input v-model=\"username\" type=\"text\" id=\"username\" required> <label for=\"password\">Password:</label> <input v-model=\"password\" type=\"password\" id=\"password\" required> <button type=\"submit\">Login</button> </form> <router-link to=\"/registration\" class=\"link\">I don't have an account</router-link> </div> </template> <script> import api from '@/services/api'; export default { data() { return { username: '', password: '', }; }, methods: { login() { const credentials = { username: this.username, password: this.password, }; api.post('auth/token', credentials) .then(response => { const token = response.data.token; localStorage.setItem('token', token); this.$router.push('/books'); }) .catch(error => { console.error('Login failed:', error); }); }, }, }; </script> <style scoped> .link { color: #fff; font-size: 17px; } form { margin-bottom: 20px; } </style> Logout.vue <template> <h2>{{ username }}, are you sure you want to logout?</h2> <button @click=\"logout\">Yes</button> </template> <script> import api from '../services/api'; import router from '../router'; export default { data() { return { username: '' }; }, mounted() { const token = localStorage.getItem('token'); if (!token) { router.push('/login'); return; } api.get('auth/users/me/', { headers: { Authorization: `Token ${token}` } }) .then(response => { this.username = response.data.username; this.username = this.username.charAt(0).toUpperCase() + this.username.slice(1); }) .catch(error => { console.error(error); }) }, methods: { logout() { localStorage.removeItem('token'); this.$router.push('/login'); } } } </script> Navbar.vue <template> <nav> <h1>Navigation</h1> <ul> <li> <ul label=\"Books\"> <li><router-link to=\"/books\">All Books</router-link></li> <li><router-link to=\"/books/new\">Add new book</router-link></li> <li><router-link to=\"/books/random\">Get random book</router-link></li> </ul> </li> <li> <ul label=\"Readers\"> <li><router-link to=\"/readers\">All Readers</router-link></li> <li><router-link to=\"/readers/new\">Add new reader</router-link></li> </ul> </li> <li> <ul label=\"Assignments\"> <li><router-link to=\"/assignments\">All Assignments</router-link></li> <li><router-link to=\"/assignments/new\">Add new assignment</router-link></li> </ul> </li> <li> <ul label=\"Halls\"> <li><router-link to=\"/halls\">All Halls</router-link></li> <li><router-link to=\"/halls/new\">Add new hall</router-link></li> </ul> </li> <li> <ul label=\"Copies\"> <li><router-link to=\"/copies\">All Copies</router-link></li> <li><router-link to=\"/copies/new\">Add new copy</router-link></li> </ul> </li> </ul> <h2><router-link to=\"/logout\">Log out</router-link></h2> </nav> </template> <style scoped> ul:before { content: attr(label); font-size: 120%; font-weight: bold; color: #000; } h1 { color: #000; padding-left: 20px; } nav { padding-right: 50px; background-color: #f0f0f0; line-height: 200%; margin-right: 75px; width: 250px; height: 100%; position: fixed; top: 0; left: 0; } ul { padding-inline-start: 10px; } </style>","title":"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b"},{"location":"lab4/main/#assignment","text":"AllAssignment.vue <template> <h1>All Assignments</h1> <hr/> <div v-for=\"assignment in Assignments\" :key=\"assignment.id\"> <h3> {{ assignment.copy.book.name }}</h3> <h4>{{ assignment.reader.surname }} {{ assignment.reader.name }}</h4> <br/> <button @click=\"pushRouter(assignment.id)\">Full assignemnt information</button> <hr/> </div> </template> <script> import api from '@/services/api' import router from '@/router' export default { data() { return { Assignments: [], } }, methods: { pushRouter(id) { const url = '/assignments/' + id.toString(); router.push(url); } }, mounted () { api.get('/assignments/all') .then(response => { this.Assignments = response.data; }) .catch(error => { console.error(error); }) } } </script> AssignmentDetails.vue <template> <div v-if=\"assignment\"> <h1>Assignment Details</h1> <h3>{{ assignment.copy.book.name }} {{ assignment.copy.book.author }}</h3> <h4>Taken by: {{ assignment.reader.name }} {{ assignment.reader.surname }}</h4> <p>Assigned: {{ assignment.date_assigned }}</p> <p v-if=\"assignment.date_returned\">Returned: {{ assignment.date_returned }}</p> <p v-else>not returned yet</p> <button><router-link :to=\"{name: 'EditAssignment', params: { assignmentId: $assignmentId } }\">Edit</router-link></button><br><br> <router-link to=\"/assignments\">Go back</router-link> </div> <p v-else>Loading ...</p> </template> <script> import api from '@/services/api' export default { data() { return { assignment: null, assignmentId: null, } }, mounted() { this.assignmentId = this.$route.params.assignmentId; const url = '/assignments/' + this.assignmentId.toString(); api.get(url) .then(response => { this.assignment = response.data; }) .catch(error => { console.error(error); }) } } </script> EditAssignment.vue <template> <div> <h1>Edit Assignment</h1> <form @submit.prevent=\"submitForm\"> <label>Reader:</label><br> <select v-model=\"selectedReader\"> <option v-for=\"reader in Readers\" :key=\"reader.id\" :value=\"reader.id\"> {{ reader.name }} {{ reader.surname }} </option> </select><br><br> <label>Copy:</label><br> <select v-model=\"selectedCopy\"> <option v-for=\"copy in Copies\" :key=\"copy.id\" :value=\"copy.id\"> {{ copy.id }}. {{ copy.book.name }} by {{ copy.book.author }} </option> </select><br><br> <label for=\"dateAssigned\">Date Assigned:</label><br> <input v-model=\"dateAssigned\" type=\"date\" id=\"dateAssigned\" /><br><br> <label for=\"dateReturned\">Date Returned:</label><br> <input v-model=\"dateReturned\" type=\"date\" id=\"dateReturned\" /><br><br> <button type=\"submit\">Save changes</button> </form> </div> </template> <script> import api from '@/services/api'; import router from '@/router'; export default { data() { return { assignmentId: null, Readers: [], Copies: [], selectedReader: null, selectedCopy: null, dateAssigned: null, dateReturned: null, }; }, methods: { async fetchAssignment() { try { const assignmentId = this.$route.params.assignmentId; const url = '/assignments/' + assignmentId.toString(); const response = await api.get(url); const assignment = response.data; console.log(response); this.selectedReader = assignment.reader.id; this.selectedCopy = assignment.copy.id; this.dateAssigned = assignment.date_assigned; this.dateReturned = assignment.date_returned; } catch (error) { console.error(error); } }, submitForm() { const url = '/assignments/update/' + this.assignmentId.toString(); const data = { reader: this.selectedReader, copy: this.selectedCopy, date_assigned: this.dateAssigned, date_returned: this.dateReturned, } console.log(data); api.patch(url, data) .then(response => { const to = '/assignments/' + this.assignmentId.toString(); router.push(to); }) .catch(error => { console.error(error); }); }, }, mounted() { this.fetchAssignment(); this.assignmentId = this.$route.params.assignmentId; api.get('/readers/all') .then(response => { this.Readers = response.data; }) .catch(error => { console.error(error); }); api.get('/copys/all') .then(response => { this.Copies = response.data; }) .catch(error => { console.error(error); }); }, }; </script> NewAssignment.vue <template> <div class=\"new-assignment_container\"> <h1>New Assignment</h1> <form @submit=\"addNewAssignment\"> <label>Reader:</label><br> <select v-model=\"reader\" id=\"reader\"> <option v-for=\"reader in readers\" :key=\"reader.id\" :value=\"reader.id\">{{ reader.name }} {{ reader.surname }}</option> </select><br><br> <label>Copy:</label><br> <select v-model=\"copy\" id=\"copy\"> <option v-for=\"copy in copies\" :key=\"copy.id\" :value=\"copy.id\">{{ copy.book.name }} {{ copy.book.author }}</option> </select><br><br> <label>Date Assigned:</label><br> <input v-model=\"dateAssigned\" id=\"dateAssigned\" type=\"date\"><br> <label>Date Returned:</label><br> <input v-model=\"dateReturned\" id=\"dateReturned\" type=\"date\"><br> <button type=\"submit\">Submit</button> </form> </div> </template> <script> import api from '@/services/api'; export default { data() { return { copies: [], readers: [], copy: null, reader: null, dateAssigned: null, dateReturned: null, } }, methods: { addNewAssignment(event) { const userData = { reader: this.reader, copy: this.copy, date_assigned: this.dateAssigned, date_returned: this.dateReturned, } api.post('/assignments/new', userData) .then(response => { localStorage.setItem('formData', JSON.stringify(userData)); }) .catch(error => { console.error(error); }) } }, mounted () { api.get('/readers/all') .then(response => { this.readers = response.data; }) .catch(error => { console.error(error); }) api.get('/copys/all') .then(response => { this.copies = response.data; }) .catch(error => { console.error(error); }) } } </script> <style scoped> input { margin-bottom: 20px; } </style>","title":"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0434\u043b\u044f assignment"},{"location":"pw3.1/tasks/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f 3.1 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1 \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0439: \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2 \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c); \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435); \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430); \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442); \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435). \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3 \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f; \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435; \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f; \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438. \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f.","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f 3.1"},{"location":"pw3.1/tasks/#31","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f 3.1"},{"location":"pw3.1/tasks/#1","text":"\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439: \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0439:","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"pw3.1/tasks/#2","text":"\u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c); \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435); \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430); \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442); \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435).","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"pw3.1/tasks/#3","text":"\u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f; \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435; \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f; \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438. \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f.","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3"}]}